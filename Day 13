BACK-END ( NODE.JS + EXPRESS + MONGO DB )
import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
  const [todos, setTodos] = useState([]);
  const [title, setTitle] = useState("");

  // Fetch todos
  useEffect(() => {
    fetchTodos();
  }, []);

  const fetchTodos = async () => {
    const res = await axios.get("http://localhost:4000/todos");
    setTodos(res.data);
  };

  const addTodo = async () => {
    if (!title.trim()) return;
    const res = await axios.post("http://localhost:4000/todos", { title });
    setTodos([...todos, res.data]);
    setTitle("");
  };

  const toggleTodo = async (id, completed) => {
    const res = await axios.put(`http://localhost:4000/todos/${id}`, { completed: !completed });
    setTodos(todos.map(t => (t.id === id ? res.data : t)));
  };

  const deleteTodo = async (id) => {
    await axios.delete(`http://localhost:4000/todos/${id}`);
    setTodos(todos.filter(t => t.id !== id));
  };

  return (
    <div style={{ maxWidth: "400px", margin: "50px auto", textAlign: "center" }}>
      <h1>✅ To-Do App</h1>

      <input
        type="text"
        value={title}
        placeholder="Add a new task"
        onChange={(e) => setTitle(e.target.value)}
      />
      <button onClick={addTodo}>Add</button>

      <ul style={{ listStyle: "none", padding: 0 }}>
        {todos.map(todo => (
          <li key={todo.id} style={{ margin: "10px 0" }}>
            <span
              style={{
                textDecoration: todo.completed ? "line-through" : "none",
                cursor: "pointer"
              }}
              onClick={() => toggleTodo(todo.id, todo.completed)}
            >
              {todo.title}
            </span>
            <button onClick={() => deleteTodo(todo.id)} style={{ marginLeft: "10px" }}>
              ❌
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;



FRONT-END ( REACT)

import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
  const [notes, setNotes] = useState([]);
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const [editId, setEditId] = useState(null);

  // Fetch all notes
  useEffect(() => {
    fetchNotes();
  }, []);

  const fetchNotes = async () => {
    const res = await axios.get("http://localhost:5000/notes");
    setNotes(res.data);
  };

  const addOrUpdateNote = async () => {
    if (!title || !content) return;

    if (editId) {
      // Update
      const res = await axios.put(`http://localhost:5000/notes/${editId}`, { title, content });
      setNotes(notes.map(n => (n._id === editId ? res.data : n)));
      setEditId(null);
    } else {
      // Create
      const res = await axios.post("http://localhost:5000/notes", { title, content });
      setNotes([res.data, ...notes]);
    }

    setTitle("");
    setContent("");
  };

  const editNote = (note) => {
    setTitle(note.title);
    setContent(note.content);
    setEditId(note._id);
  };

  const deleteNote = async (id) => {
    await axios.delete(`http://localhost:5000/notes/${id}`);
    setNotes(notes.filter(n => n._id !== id));
  };

  return (
    <div style={{ maxWidth: "600px", margin: "50px auto", textAlign: "center" }}>
      <h1>📝 Notes App</h1>

      <input
        type="text"
        placeholder="Title"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
        style={{ width: "100%", margin: "5px", padding: "10px" }}
      />
      <textarea
        placeholder="Content"
        value={content}
        onChange={(e) => setContent(e.target.value)}
        style={{ width: "100%", margin: "5px", padding: "10px" }}
      />
      <button onClick={addOrUpdateNote}>
        {editId ? "Update Note" : "Add Note"}
      </button>

      <div style={{ marginTop: "20px" }}>
        {notes.map(note => (
          <div key={note._id} style={{ border: "1px solid #ccc", margin: "10px", padding: "10px", borderRadius: "5px" }}>
            <h3>{note.title}</h3>
            <p>{note.content}</p>
            <button onClick={() => editNote(note)}>✏️ Edit</button>
            <button onClick={() => deleteNote(note._id)} style={{ marginLeft: "10px" }}>❌ Delete</button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default App;
