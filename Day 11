const express = require("express");
const bodyParser = require("body-parser");

const app = express();
const PORT = 3000;

// Middleware
app.use(bodyParser.json());

// Temporary in-memory data store
let students = [];
let idCounter = 1;

/**
 * Create - Add a new student
 */
app.post("/students", (req, res) => {
  const { name, age, grade } = req.body;
  if (!name || !age || !grade) {
    return res.status(400).json({ error: "All fields (name, age, grade) are required" });
  }

  const student = { id: idCounter++, name, age, grade };
  students.push(student);
  res.status(201).json(student);
});

/**
 * Read - Get all students
 */
app.get("/students", (req, res) => {
  res.json(students);
});

/**
 * Read - Get single student by ID
 */
app.get("/students/:id", (req, res) => {
  const student = students.find(s => s.id === parseInt(req.params.id));
  if (!student) {
    return res.status(404).json({ error: "Student not found" });
  }
  res.json(student);
});

/**
 * Update - Modify student by ID
 */
app.put("/students/:id", (req, res) => {
  const student = students.find(s => s.id === parseInt(req.params.id));
  if (!student) {
    return res.status(404).json({ error: "Student not found" });
  }

  const { name, age, grade } = req.body;
  if (name) student.name = name;
  if (age) student.age = age;
  if (grade) student.grade = grade;

  res.json(student);
});

/**
 * Delete - Remove student by ID
 */
app.delete("/students/:id", (req, res) => {
  const index = students.findIndex(s => s.id === parseInt(req.params.id));
  if (index === -1) {
    return res.status(404).json({ error: "Student not found" });
  }

  const deletedStudent = students.splice(index, 1);
  res.json({ message: "Student deleted", student: deletedStudent[0] });
});

// Start server
app.listen(PORT, () => {
  console.log(`âœ… Student CRUD API running at http://localhost:${PORT}`);
});
