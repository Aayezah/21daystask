BACKEND

const express = require("express");
const bodyParser = require("body-parser");
const cors = require("cors");

const app = express();
const PORT = 4000;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// In-memory storage
let todos = [];
let idCounter = 1;

// Create To-Do
app.post("/todos", (req, res) => {
  const { title } = req.body;
  if (!title) return res.status(400).json({ error: "Title is required" });

  const todo = { id: idCounter++, title, completed: false };
  todos.push(todo);
  res.status(201).json(todo);
});

// Get all To-Dos
app.get("/todos", (req, res) => {
  res.json(todos);
});

// Update To-Do (toggle or edit)
app.put("/todos/:id", (req, res) => {
  const todo = todos.find(t => t.id === parseInt(req.params.id));
  if (!todo) return res.status(404).json({ error: "To-Do not found" });

  const { title, completed } = req.body;
  if (title !== undefined) todo.title = title;
  if (completed !== undefined) todo.completed = completed;

  res.json(todo);
});

// Delete To-Do
app.delete("/todos/:id", (req, res) => {
  const index = todos.findIndex(t => t.id === parseInt(req.params.id));
  if (index === -1) return res.status(404).json({ error: "To-Do not found" });

  const deleted = todos.splice(index, 1);
  res.json({ message: "Deleted", todo: deleted[0] });
});

// Start server
app.listen(PORT, () => {
  console.log(`✅ To-Do API running at http://localhost:${PORT}`);
});

FRONT END REACT APP

import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
  const [todos, setTodos] = useState([]);
  const [title, setTitle] = useState("");

  // Fetch todos
  useEffect(() => {
    fetchTodos();
  }, []);

  const fetchTodos = async () => {
    const res = await axios.get("http://localhost:4000/todos");
    setTodos(res.data);
  };

  const addTodo = async () => {
    if (!title.trim()) return;
    const res = await axios.post("http://localhost:4000/todos", { title });
    setTodos([...todos, res.data]);
    setTitle("");
  };

  const toggleTodo = async (id, completed) => {
    const res = await axios.put(`http://localhost:4000/todos/${id}`, { completed: !completed });
    setTodos(todos.map(t => (t.id === id ? res.data : t)));
  };

  const deleteTodo = async (id) => {
    await axios.delete(`http://localhost:4000/todos/${id}`);
    setTodos(todos.filter(t => t.id !== id));
  };

  return (
    <div style={{ maxWidth: "400px", margin: "50px auto", textAlign: "center" }}>
      <h1>✅ To-Do App</h1>

      <input
        type="text"
        value={title}
        placeholder="Add a new task"
        onChange={(e) => setTitle(e.target.value)}
      />
      <button onClick={addTodo}>Add</button>

      <ul style={{ listStyle: "none", padding: 0 }}>
        {todos.map(todo => (
          <li key={todo.id} style={{ margin: "10px 0" }}>
            <span
              style={{
                textDecoration: todo.completed ? "line-through" : "none",
                cursor: "pointer"
              }}
              onClick={() => toggleTodo(todo.id, todo.completed)}
            >
              {todo.title}
            </span>
            <button onClick={() => deleteTodo(todo.id)} style={{ marginLeft: "10px" }}>
              ❌
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
